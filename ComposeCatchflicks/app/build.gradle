plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

android {
    namespace 'com.akshay.composecatchflicks'
    compileSdk 33

    defaultConfig {
        applicationId "com.akshay.composecatchflicks"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }


    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"https://api.themoviedb.org/3/\"")
            buildConfigField("String", "TMDB_API_KEY", "\"" + getTmdbApiKey() + "\"")
        }
        release {
            minifyEnabled true // to apply the proguard
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"https://api.themoviedb.org/3/\"")
            buildConfigField("String", "TMDB_API_KEY", "\"" + getTmdbApiKey() + "\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

def getTmdbApiKey() {
    def tmdbApiKey = System.getenv("TMDB_API_KEY")
    if (tmdbApiKey == null || tmdbApiKey.length() == 0) {
        def keysFile = file("keys.properties")
        def keysProperties = new Properties()
        keysProperties.load(new FileInputStream(keysFile))
        tmdbApiKey = keysProperties['TMDB_API_KEY']
        if (tmdbApiKey == null) {
            logger.error("You need to either place appropriate keys.properties or set proper environment variables for API key")
        }
    }
    return tmdbApiKey
}

dependencies {

    def composeBom = platform('androidx.compose:compose-bom:2022.10.00')
    implementation composeBom
    androidTestImplementation composeBom

    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    implementation 'androidx.compose.material3:material3'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.0-alpha03"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'

    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.activity:activity-ktx:1.6.1"

    // Image Loading - backed by Coroutines
    implementation "io.coil-kt:coil-compose:2.2.1"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Asynchronous Framework
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Dependency Injection
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    // Navigation
    implementation 'androidx.navigation:navigation-common-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-compose:2.5.3'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Serialization
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'

    // Unit Testing
    testImplementation 'junit:junit:4.13.2'

    // UI Testing
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}

kapt {
    correctErrorTypes true
}
